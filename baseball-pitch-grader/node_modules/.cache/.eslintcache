[{"C:\\Users\\PuertoFreakO\\Desktop\\CS495\\ReactApp\\baseball-pitch-grader\\src\\index.js":"1","C:\\Users\\PuertoFreakO\\Desktop\\CS495\\ReactApp\\baseball-pitch-grader\\src\\App.js":"2","C:\\Users\\PuertoFreakO\\Desktop\\CS495\\ReactApp\\baseball-pitch-grader\\src\\reportWebVitals.js":"3","C:\\Users\\PuertoFreakO\\Desktop\\CS495\\ReactApp\\baseball-pitch-grader\\src\\components\\PitchInputForm.js":"4","C:\\Users\\PuertoFreakO\\Desktop\\CS495\\ReactApp\\baseball-pitch-grader\\src\\components\\SettingsPage.js":"5","C:\\Users\\PuertoFreakO\\Desktop\\CS495\\ReactApp\\baseball-pitch-grader\\src\\components\\LineGraph.js":"6","C:\\Users\\PuertoFreakO\\Desktop\\CS495\\CS495-AlabamaBaseball-GroupD\\baseball-pitch-grader\\src\\index.js":"7","C:\\Users\\PuertoFreakO\\Desktop\\CS495\\CS495-AlabamaBaseball-GroupD\\baseball-pitch-grader\\src\\App.js":"8","C:\\Users\\PuertoFreakO\\Desktop\\CS495\\CS495-AlabamaBaseball-GroupD\\baseball-pitch-grader\\src\\reportWebVitals.js":"9","C:\\Users\\PuertoFreakO\\Desktop\\CS495\\CS495-AlabamaBaseball-GroupD\\baseball-pitch-grader\\src\\components\\SettingsPage.js":"10","C:\\Users\\PuertoFreakO\\Desktop\\CS495\\CS495-AlabamaBaseball-GroupD\\baseball-pitch-grader\\src\\components\\PitchInputForm.js":"11","C:\\Users\\PuertoFreakO\\Desktop\\CS495\\CS495-AlabamaBaseball-GroupD\\baseball-pitch-grader\\src\\components\\LineGraph.js":"12","C:\\Users\\PuertoFreakO\\Desktop\\CS495\\CS495-AlabamaBaseball-GroupD\\baseball-pitch-grader\\src\\components\\Spreadsheet.js":"13","C:\\Users\\PuertoFreakO\\Desktop\\CS495\\CS495-AlabamaBaseball-GroupD\\baseball-pitch-grader\\src\\components\\InputForm.js":"14","C:\\Users\\PuertoFreakO\\Desktop\\CS495\\CS495-AlabamaBaseball-GroupD\\baseball-pitch-grader\\src\\components\\EditableTable.js":"15","C:\\Users\\PuertoFreakO\\Desktop\\CS495\\CS495-AlabamaBaseball-GroupD\\baseball-pitch-grader\\src\\components\\GraphsPage.js":"16","C:\\Users\\PuertoFreakO\\Desktop\\CS495\\CS495-AlabamaBaseball-GroupD\\baseball-pitch-grader\\src\\components\\PitchingDataLineGraph.js":"17"},{"size":535,"mtime":1694801702644,"results":"18","hashOfConfig":"19"},{"size":886,"mtime":1695149607766,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1694801702960,"results":"21","hashOfConfig":"19"},{"size":4009,"mtime":1695140632819,"results":"22","hashOfConfig":"19"},{"size":239,"mtime":1694802455565,"results":"23","hashOfConfig":"19"},{"size":1955,"mtime":1695149401732,"results":"24","hashOfConfig":"19"},{"size":535,"mtime":1694801702644,"results":"25","hashOfConfig":"26"},{"size":1243,"mtime":1699035628803,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1694801702960,"results":"28","hashOfConfig":"26"},{"size":239,"mtime":1694802455565,"results":"29","hashOfConfig":"26"},{"size":4474,"mtime":1697587110214,"results":"30","hashOfConfig":"26"},{"size":2193,"mtime":1697584350771,"results":"31","hashOfConfig":"26"},{"size":615,"mtime":1697659440892,"results":"32","hashOfConfig":"26"},{"size":903,"mtime":1697661024254,"results":"33","hashOfConfig":"26"},{"size":2730,"mtime":1698777197139,"results":"34","hashOfConfig":"26"},{"size":2324,"mtime":1699562651294,"results":"35","hashOfConfig":"26"},{"size":1371,"mtime":1699033864503,"results":"36","hashOfConfig":"26"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"19ik4lm",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"13y75a4",{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\PuertoFreakO\\Desktop\\CS495\\ReactApp\\baseball-pitch-grader\\src\\index.js",[],[],[],"C:\\Users\\PuertoFreakO\\Desktop\\CS495\\ReactApp\\baseball-pitch-grader\\src\\App.js",["95","96"],[],"C:\\Users\\PuertoFreakO\\Desktop\\CS495\\ReactApp\\baseball-pitch-grader\\src\\reportWebVitals.js",[],[],"C:\\Users\\PuertoFreakO\\Desktop\\CS495\\ReactApp\\baseball-pitch-grader\\src\\components\\PitchInputForm.js",[],[],"C:\\Users\\PuertoFreakO\\Desktop\\CS495\\ReactApp\\baseball-pitch-grader\\src\\components\\SettingsPage.js",[],[],"C:\\Users\\PuertoFreakO\\Desktop\\CS495\\ReactApp\\baseball-pitch-grader\\src\\components\\LineGraph.js",["97","98"],[],"import React, { useEffect, useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\n\nconst generateLineGraphData = (inputLabels, scores1, scores2) => {\n  return {\n    labels: inputLabels,\n    datasets: [\n      {\n        label: 'Scores 1',\n        data: scores1,\n        borderColor: 'blue',\n        backgroundColor: 'rgba(0, 0, 255, 0.3)',\n        borderWidth: 2,\n        pointRadius: 5,\n        pointHoverRadius: 7,\n      },\n      {\n        label: 'Scores 2',\n        data: scores2,\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.3)',\n        borderWidth: 2,\n        pointRadius: 5,\n        pointHoverRadius: 7,\n      },\n    ],\n  };\n};\n\nconst LineGraph = ({ updateGraphData }) => {\n  const [scores1, setScores1] = useState([]);\n  const inputLabels = ['Input 1', 'Input 2', 'Input 3', 'Input 4', 'Input 5', 'Input 6', 'Input 7']; // Update with your input labels\n  const scores2 = [5, 5, 5, 5, 5, 5, 5]; // Update with your scores for line 2\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.post('http://localhost:5000/getScores');\n        setScores1(response.data.finalScores);\n        updateGraphData(response.data.finalScores); // Call the update function\n      } catch (error) {\n        console.error('Error populating graph:', error);\n      }\n    };\n\n    fetchData();\n  }, []); // Empty dependency array ensures this effect runs once, like componentDidMount\n  const data = generateLineGraphData(inputLabels, scores1, scores2);\n\n  const options = {\n    scales: {\n      x: {\n        type: 'category',\n        grid: {\n          drawBorder: false,\n        },\n      },\n      y: {\n        beginAtZero: true,\n        max: 10, // Adjust as needed\n        grid: {\n          drawBorder: false,\n        },\n      },\n    },\n  };\n  \n  return <Line data={data} options={options} />;\n};\n\nexport default LineGraph;\n",[],"C:\\Users\\PuertoFreakO\\Desktop\\CS495\\CS495-AlabamaBaseball-GroupD\\baseball-pitch-grader\\src\\index.js",[],[],[],"C:\\Users\\PuertoFreakO\\Desktop\\CS495\\CS495-AlabamaBaseball-GroupD\\baseball-pitch-grader\\src\\App.js",["99","100"],[],"C:\\Users\\PuertoFreakO\\Desktop\\CS495\\CS495-AlabamaBaseball-GroupD\\baseball-pitch-grader\\src\\reportWebVitals.js",[],[],"C:\\Users\\PuertoFreakO\\Desktop\\CS495\\CS495-AlabamaBaseball-GroupD\\baseball-pitch-grader\\src\\components\\SettingsPage.js",[],[],"C:\\Users\\PuertoFreakO\\Desktop\\CS495\\CS495-AlabamaBaseball-GroupD\\baseball-pitch-grader\\src\\components\\PitchInputForm.js",[],[],"C:\\Users\\PuertoFreakO\\Desktop\\CS495\\CS495-AlabamaBaseball-GroupD\\baseball-pitch-grader\\src\\components\\LineGraph.js",["101"],[],"import React, { useEffect, useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\n\nconst generateLineGraphData = (inputLabels, scores1, scores2) => {\n  return {\n    labels: inputLabels,\n    datasets: [\n      {\n        label: 'Player Scores',\n        data: scores1,\n        borderColor: 'blue',\n        backgroundColor: 'rgba(0, 0, 255, 0.3)',\n        borderWidth: 2,\n        pointRadius: 5,\n        pointHoverRadius: 7,\n      },\n      {\n        label: 'Average Scores',\n        data: scores2,\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.3)',\n        borderWidth: 2,\n        pointRadius: 5,\n        pointHoverRadius: 7,\n      },\n    ],\n  };\n};\n\nconst LineGraph = ({ updateGraphData }) => {\n  console.log(\"Passed data: \", updateGraphData)\n  const [scores1, setScores1] = useState([]);\n  const [scores2, setScores2] = useState([]);\n  const inputLabels = ['Velocity', 'Ind. Vert Break', 'Horz Break', 'Spin Rate', 'RelHeight', 'Extension', 'Vert App Angle']; // Update with your input labels\n\n  \n  useEffect(() => {\n    console.log('updateGraphData:', updateGraphData); // Log the data\n    setScores1(updateGraphData);\n  }, [updateGraphData]); // Empty dependency array ensures this effect runs once, like componentDidMount\n  \n  useEffect(() => {\n    const updateScores = async () => {\n      try {\n        const fetchedData = await axios.post('http://localhost:5000/getAverages');\n        const scores = fetchedData.data.finalScores;\n        setScores2(scores);\n      } catch (error) {\n        console.error('Error fetching scores:', error);\n      }\n    }; \n    updateScores();\n  }, [updateGraphData]); // Only re-run the effect if updateGraphData changes\n\n  const data = generateLineGraphData(inputLabels, scores1, scores2);\n\n  const options = {\n    scales: {\n      x: {\n        type: 'category',\n        grid: {\n          drawBorder: false,\n        },\n      },\n      y: {\n        beginAtZero: true,\n        max: 10, // Adjust as needed\n        grid: {\n          drawBorder: false,\n        },\n      },\n    },\n  };\n  \n  return <Line data={data} options={options} />;\n};\n\nexport default LineGraph;\n",[],"C:\\Users\\PuertoFreakO\\Desktop\\CS495\\CS495-AlabamaBaseball-GroupD\\baseball-pitch-grader\\src\\components\\Spreadsheet.js",[],[],"C:\\Users\\PuertoFreakO\\Desktop\\CS495\\CS495-AlabamaBaseball-GroupD\\baseball-pitch-grader\\src\\components\\InputForm.js",[],[],"C:\\Users\\PuertoFreakO\\Desktop\\CS495\\CS495-AlabamaBaseball-GroupD\\baseball-pitch-grader\\src\\components\\EditableTable.js",["102"],[],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport './EditableTable.css';\nimport { useNavigate } from 'react-router-dom';\n\nconst EditableTable = ({ data, columns, options }) => {\n  const navigate = useNavigate();\n  const [tableData, setTableData] = useState(data);\n\n  const handleCellEdit = (rowIndex, columnIndex, value) => {\n    const updatedData = [...tableData];\n    updatedData[rowIndex][columnIndex] = value;\n    setTableData(updatedData);\n  };\n\n  const addRow = () => {\n    const newRow = [tableData[tableData.length - 1][0], tableData[tableData.length - 1][1], tableData[tableData.length - 1][2], '', '', '', '', '', '', ''];\n    setTableData([...tableData, newRow]);\n  };\n\n  const handleSubmit = () => {\n    // Use navigate to go to the graphs page with data\n    navigate('/graphs', { state: { tableData: tableData } });\n  };\n\n  return (\n    <div>\n      <table className=\"editable-table\">\n        <thead>\n          <tr>\n            {columns.map((column, columnIndex) => (\n              <th key={columnIndex}>{column}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {tableData.map((row, rowIndex) => (\n            <tr key={rowIndex}>\n              {row.map((cell, columnIndex) => (\n                <td key={columnIndex}>\n                  {columnIndex <= 2 && columnIndex >= 1 ? (\n                    <select\n                      value={cell}\n                      onChange={(e) => handleCellEdit(rowIndex, columnIndex, e.target.value)}\n\n                    >\n                      <option value=\"\">Select...</option>\n                      {options[columnIndex-1].map((option, index) => (\n                        <option key={index} value={option}>\n                          {option}\n                        </option>\n                      ))}\n                    </select>\n                  ) : columnIndex === 0 ? (\n                    <input\n                      type=\"text\"\n                      value={cell}\n                      onChange={(e) => handleCellEdit(rowIndex, columnIndex, e.target.value)}\n                      className=\"name-cell\" // Apply the 'name-cell' class\n                    />\n                  ) : (\n                    <input\n                      type=\"text\"\n                      value={cell}\n                      onChange={(e) => handleCellEdit(rowIndex, columnIndex, e.target.value)}\n                      className='input-cell'\n                    />\n                  )}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <button onClick={addRow}>Add Row</button>\n      <button onClick={handleSubmit}>Submit</button> \n    </div>\n  );\n};\n\nexport default EditableTable;\n","C:\\Users\\PuertoFreakO\\Desktop\\CS495\\CS495-AlabamaBaseball-GroupD\\baseball-pitch-grader\\src\\components\\GraphsPage.js",[],[],"C:\\Users\\PuertoFreakO\\Desktop\\CS495\\CS495-AlabamaBaseball-GroupD\\baseball-pitch-grader\\src\\components\\PitchingDataLineGraph.js",[],[],{"ruleId":"103","severity":1,"message":"104","line":5,"column":8,"nodeType":"105","messageId":"106","endLine":5,"endColumn":20},{"ruleId":"103","severity":1,"message":"107","line":9,"column":10,"nodeType":"105","messageId":"106","endLine":9,"endColumn":19},{"ruleId":"103","severity":1,"message":"108","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":13},{"ruleId":"109","severity":1,"message":"110","line":49,"column":6,"nodeType":"111","endLine":49,"endColumn":8,"suggestions":"112"},{"ruleId":"103","severity":1,"message":"113","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"114","line":3,"column":8,"nodeType":"105","messageId":"106","endLine":3,"endColumn":13},{"ruleId":"103","severity":1,"message":"108","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":13},{"ruleId":"103","severity":1,"message":"114","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":13},"no-unused-vars","'SettingsPage' is defined but never used.","Identifier","unusedVar","'graphData' is assigned a value but never used.","'Chart' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateGraphData'. Either include it or remove the dependency array. If 'updateGraphData' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["115"],"'useState' is defined but never used.","'axios' is defined but never used.",{"desc":"116","fix":"117"},"Update the dependencies array to be: [updateGraphData]",{"range":"118","text":"119"},[1430,1432],"[updateGraphData]"]