{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PuertoFreakO\\\\Desktop\\\\CS495\\\\ReactApp\\\\baseball-pitch-grader\\\\src\\\\components\\\\LineGraph.js\";\nimport React from 'react';\nimport Chart from 'chart.js/auto';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateLineGraphData = (inputLabels, scores1, scores2) => {\n  return {\n    labels: inputLabels,\n    datasets: [{\n      label: 'Scores 1',\n      data: scores1,\n      borderColor: 'blue',\n      backgroundColor: 'rgba(0, 0, 255, 0.3)',\n      borderWidth: 2,\n      pointRadius: 5,\n      pointHoverRadius: 7\n    }, {\n      label: 'Scores 2',\n      data: scores2,\n      borderColor: 'red',\n      backgroundColor: 'rgba(255, 0, 0, 0.3)',\n      borderWidth: 2,\n      pointRadius: 5,\n      pointHoverRadius: 7\n    }]\n  };\n};\nconst LineGraph = () => {\n  const inputLabels = ['Input 1', 'Input 2', 'Input 3', 'Input 4', 'Input 5', 'Input 6', 'Input 7']; // Update with your input labels\n  const scores1 = [80, 90, 85, 88, 92, 20, 10]; // Update with your scores for line 1\n  const scores2 = [70, 85, 78, 90, 88, 30, 20]; // Update with your scores for line 2\n\n  const data = generateLineGraphData(inputLabels, scores1, scores2);\n  const options = {\n    scales: {\n      x: {\n        type: 'category',\n        grid: {\n          drawBorder: false\n        }\n      },\n      y: {\n        beginAtZero: true,\n        max: 100,\n        // Adjust as needed\n        grid: {\n          drawBorder: false\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: data,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n};\n_c = LineGraph;\nexport default LineGraph;\nvar _c;\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"names":["React","Chart","Line","jsxDEV","_jsxDEV","generateLineGraphData","inputLabels","scores1","scores2","labels","datasets","label","data","borderColor","backgroundColor","borderWidth","pointRadius","pointHoverRadius","LineGraph","options","scales","x","type","grid","drawBorder","y","beginAtZero","max","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PuertoFreakO/Desktop/CS495/ReactApp/baseball-pitch-grader/src/components/LineGraph.js"],"sourcesContent":["import React from 'react';\nimport Chart from 'chart.js/auto';\nimport { Line } from 'react-chartjs-2';\n\nconst generateLineGraphData = (inputLabels, scores1, scores2) => {\n  return {\n    labels: inputLabels,\n    datasets: [\n      {\n        label: 'Scores 1',\n        data: scores1,\n        borderColor: 'blue',\n        backgroundColor: 'rgba(0, 0, 255, 0.3)',\n        borderWidth: 2,\n        pointRadius: 5,\n        pointHoverRadius: 7,\n      },\n      {\n        label: 'Scores 2',\n        data: scores2,\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.3)',\n        borderWidth: 2,\n        pointRadius: 5,\n        pointHoverRadius: 7,\n      },\n    ],\n  };\n};\n\nconst LineGraph = () => {\n  const inputLabels = ['Input 1', 'Input 2', 'Input 3', 'Input 4', 'Input 5', 'Input 6', 'Input 7']; // Update with your input labels\n  const scores1 = [80, 90, 85, 88, 92, 20, 10]; // Update with your scores for line 1\n  const scores2 = [70, 85, 78, 90, 88, 30, 20]; // Update with your scores for line 2\n\n  const data = generateLineGraphData(inputLabels, scores1, scores2);\n\n  const options = {\n    scales: {\n      x: {\n        type: 'category',\n        grid: {\n          drawBorder: false,\n        },\n      },\n      y: {\n        beginAtZero: true,\n        max: 100, // Adjust as needed\n        grid: {\n          drawBorder: false,\n        },\n      },\n    },\n  };\n  \n  return <Line data={data} options={options} />;\n};\n\nexport default LineGraph;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,eAAe;AACjC,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,qBAAqB,GAAGA,CAACC,WAAW,EAAEC,OAAO,EAAEC,OAAO,KAAK;EAC/D,OAAO;IACLC,MAAM,EAAEH,WAAW;IACnBI,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,UAAU;MACjBC,IAAI,EAAEL,OAAO;MACbM,WAAW,EAAE,MAAM;MACnBC,eAAe,EAAE,sBAAsB;MACvCC,WAAW,EAAE,CAAC;MACdC,WAAW,EAAE,CAAC;MACdC,gBAAgB,EAAE;IACpB,CAAC,EACD;MACEN,KAAK,EAAE,UAAU;MACjBC,IAAI,EAAEJ,OAAO;MACbK,WAAW,EAAE,KAAK;MAClBC,eAAe,EAAE,sBAAsB;MACvCC,WAAW,EAAE,CAAC;MACdC,WAAW,EAAE,CAAC;MACdC,gBAAgB,EAAE;IACpB,CAAC;EAEL,CAAC;AACH,CAAC;AAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,MAAMZ,WAAW,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;EACnG,MAAMC,OAAO,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAMC,OAAO,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;;EAE9C,MAAMI,IAAI,GAAGP,qBAAqB,CAACC,WAAW,EAAEC,OAAO,EAAEC,OAAO,CAAC;EAEjE,MAAMW,OAAO,GAAG;IACdC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,IAAI,EAAE,UAAU;QAChBC,IAAI,EAAE;UACJC,UAAU,EAAE;QACd;MACF,CAAC;MACDC,CAAC,EAAE;QACDC,WAAW,EAAE,IAAI;QACjBC,GAAG,EAAE,GAAG;QAAE;QACVJ,IAAI,EAAE;UACJC,UAAU,EAAE;QACd;MACF;IACF;EACF,CAAC;EAED,oBAAOpB,OAAA,CAACF,IAAI;IAACU,IAAI,EAAEA,IAAK;IAACO,OAAO,EAAEA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC/C,CAAC;AAACC,EAAA,GA1BId,SAAS;AA4Bf,eAAeA,SAAS;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}