{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PuertoFreakO\\\\Desktop\\\\CS495\\\\CS495-AlabamaBaseball-GroupD\\\\baseball-pitch-grader\\\\src\\\\components\\\\EditableTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './EditableTable.css';\nimport { useNavigate } from 'react-router-dom';\nimport extractDataFromCSV from './extractDataFromCSV';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditableTable = ({\n  data,\n  columns,\n  options\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [tableData, setTableData] = useState(data);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleCellEdit = (rowIndex, columnIndex, value) => {\n    const updatedData = [...tableData];\n    updatedData[rowIndex][columnIndex] = value;\n    setTableData(updatedData);\n  };\n  const addRow = () => {\n    const newRow = [tableData[tableData.length - 1][0], tableData[tableData.length - 1][1], tableData[tableData.length - 1][2], '', '', '', '', '', '', ''];\n    setTableData([...tableData, newRow]);\n  };\n  const handleSubmit = () => {\n    // TODO\n    // Call python backend to grade each row in tableData\n\n    // Use navigate to go to the graphs page with data\n    navigate('/export-pdf', {\n      state: {\n        tableData: tableData\n      }\n    });\n  };\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleFileUpload = () => {\n    if (!selectedFile) {\n      alert(\"Please select a file first.\");\n      return;\n    }\n    extractDataFromCSV(selectedFile).then(data => {\n      setTableData(data);\n    }).catch(err => {\n      console.error(\"Error processing file:\", err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"editable-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map((column, columnIndex) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: column\n          }, columnIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tableData.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((cell, columnIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: columnIndex <= 2 && columnIndex >= 1 ? /*#__PURE__*/_jsxDEV(\"select\", {\n              value: cell,\n              onChange: e => handleCellEdit(rowIndex, columnIndex, e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 23\n              }, this), options[columnIndex - 1].map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 25\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this) : columnIndex === 0 ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: cell,\n              onChange: e => handleCellEdit(rowIndex, columnIndex, e.target.value),\n              className: \"name-cell\" // Apply the 'name-cell' class\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: cell,\n              onChange: e => handleCellEdit(rowIndex, columnIndex, e.target.value),\n              className: \"input-cell\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this)\n          }, columnIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addRow,\n      children: \"Add Row\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFileUpload,\n        children: \"Upload CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(EditableTable, \"Je7LB37yZORqsFHCWMEpOpIveVA=\", false, function () {\n  return [useNavigate];\n});\n_c = EditableTable;\nexport default EditableTable;\nvar _c;\n$RefreshReg$(_c, \"EditableTable\");","map":{"version":3,"names":["React","useState","axios","useNavigate","extractDataFromCSV","jsxDEV","_jsxDEV","EditableTable","data","columns","options","_s","navigate","tableData","setTableData","selectedFile","setSelectedFile","handleCellEdit","rowIndex","columnIndex","value","updatedData","addRow","newRow","length","handleSubmit","state","handleFileChange","event","target","files","handleFileUpload","alert","then","catch","err","console","error","children","className","map","column","fileName","_jsxFileName","lineNumber","columnNumber","row","cell","onChange","e","option","index","type","onClick","accept","_c","$RefreshReg$"],"sources":["C:/Users/PuertoFreakO/Desktop/CS495/CS495-AlabamaBaseball-GroupD/baseball-pitch-grader/src/components/EditableTable.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './EditableTable.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport extractDataFromCSV from './extractDataFromCSV';\r\n\r\nconst EditableTable = ({ data, columns, options }) => {\r\n  const navigate = useNavigate();\r\n  const [tableData, setTableData] = useState(data);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const handleCellEdit = (rowIndex, columnIndex, value) => {\r\n    const updatedData = [...tableData];\r\n    updatedData[rowIndex][columnIndex] = value;\r\n    setTableData(updatedData);\r\n  };\r\n\r\n  const addRow = () => {\r\n    const newRow = [tableData[tableData.length - 1][0], tableData[tableData.length - 1][1], tableData[tableData.length - 1][2], '', '', '', '', '', '', ''];\r\n    setTableData([...tableData, newRow]);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // TODO\r\n    // Call python backend to grade each row in tableData\r\n\r\n    // Use navigate to go to the graphs page with data\r\n    navigate('/export-pdf', { state: { tableData: tableData } });\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleFileUpload = () => {\r\n      if (!selectedFile) {\r\n          alert(\"Please select a file first.\");\r\n          return;\r\n      }\r\n\r\n      extractDataFromCSV(selectedFile)\r\n          .then(data => {\r\n              setTableData(data);\r\n          })\r\n          .catch(err => {\r\n              console.error(\"Error processing file:\", err);\r\n          });\r\n    };\r\n\r\n  return (\r\n    <div>\r\n      <table className=\"editable-table\">\r\n        <thead>\r\n          <tr>\r\n            {columns.map((column, columnIndex) => (\r\n              <th key={columnIndex}>{column}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tableData.map((row, rowIndex) => (\r\n            <tr key={rowIndex}>\r\n              {row.map((cell, columnIndex) => (\r\n                <td key={columnIndex}>\r\n                  {columnIndex <= 2 && columnIndex >= 1 ? (\r\n                    <select\r\n                      value={cell}\r\n                      onChange={(e) => handleCellEdit(rowIndex, columnIndex, e.target.value)}\r\n\r\n                    >\r\n                      <option value=\"\">Select...</option>\r\n                      {options[columnIndex-1].map((option, index) => (\r\n                        <option key={index} value={option}>\r\n                          {option}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  ) : columnIndex === 0 ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      value={cell}\r\n                      onChange={(e) => handleCellEdit(rowIndex, columnIndex, e.target.value)}\r\n                      className=\"name-cell\" // Apply the 'name-cell' class\r\n                    />\r\n                  ) : (\r\n                    <input\r\n                      type=\"text\"\r\n                      value={cell}\r\n                      onChange={(e) => handleCellEdit(rowIndex, columnIndex, e.target.value)}\r\n                      className='input-cell'\r\n                    />\r\n                  )}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n        <button onClick={addRow}>Add Row</button>\r\n        <button onClick={handleSubmit}>Submit</button> \r\n      <table>\r\n        <input type=\"file\" accept=\".csv\" onChange={handleFileChange} />\r\n        <button onClick={handleFileUpload}>Upload CSV</button>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditableTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}