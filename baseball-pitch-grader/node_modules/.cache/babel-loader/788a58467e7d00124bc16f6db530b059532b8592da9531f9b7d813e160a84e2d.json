{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PuertoFreakO\\\\Desktop\\\\CS495\\\\CS495-AlabamaBaseball-GroupD\\\\baseball-pitch-grader\\\\src\\\\components\\\\GraphsPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PitchingDataLineGraph from './PitchingDataLineGraph';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphsPage = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const tableData = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.tableData) || [];\n\n  // Function to group the table data by the first two columns\n  const groupByColumns = data => {\n    const groups = {};\n    data.forEach(row => {\n      // Create a unique key for the group from the first two columns\n      const groupKey = `${row[0]}_${row[1]}`;\n      if (!groups[groupKey]) {\n        groups[groupKey] = [];\n      }\n      // Push the entire row (or the part you want to include) to the corresponding group\n      row.push(100);\n      groups[groupKey].push(row);\n    });\n    return groups;\n  };\n\n  // Group data by the first two columns\n  const groupedData = groupByColumns(tableData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.keys(groupedData).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Graph for \", key.replace('_', ' & ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PitchingDataLineGraph, {\n        data: groupedData[key].map(row => row.slice(3))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Velocity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Ind. Vert Break\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Horz Break\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Spin Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"RelHeight\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Extension\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Vert App Angle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Pitch Grade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: groupedData[key].map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: row.slice(3).map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: cell\n              }, cellIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 23\n              }, this))\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphsPage, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = GraphsPage;\nexport default GraphsPage;\nvar _c;\n$RefreshReg$(_c, \"GraphsPage\");","map":{"version":3,"names":["React","useLocation","PitchingDataLineGraph","jsxDEV","_jsxDEV","GraphsPage","_s","_location$state","location","tableData","state","groupByColumns","data","groups","forEach","row","groupKey","push","groupedData","children","Object","keys","map","key","replace","fileName","_jsxFileName","lineNumber","columnNumber","slice","index","cell","cellIndex","_c","$RefreshReg$"],"sources":["C:/Users/PuertoFreakO/Desktop/CS495/CS495-AlabamaBaseball-GroupD/baseball-pitch-grader/src/components/GraphsPage.js"],"sourcesContent":["import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PitchingDataLineGraph from './PitchingDataLineGraph';\n\nconst GraphsPage = () => {\n  const location = useLocation();\n  const tableData = location.state?.tableData || [];\n\n  // Function to group the table data by the first two columns\n  const groupByColumns = (data) => {\n    const groups = {};\n    data.forEach((row) => {\n      // Create a unique key for the group from the first two columns\n      const groupKey = `${row[0]}_${row[1]}`;\n      if (!groups[groupKey]) {\n        groups[groupKey] = [];\n      }\n      // Push the entire row (or the part you want to include) to the corresponding group\n      row.push(100);\n      groups[groupKey].push(row);\n    });\n    return groups;\n  };\n\n  // Group data by the first two columns\n  const groupedData = groupByColumns(tableData);\n\n  return (\n    <div>\n      {Object.keys(groupedData).map((key) => (\n        <div key={key}>\n          <h2>Graph for {key.replace('_', ' & ')}</h2>\n          <PitchingDataLineGraph data={groupedData[key].map(row => row.slice(3))} />\n\n          {/* Displaying data below each graph */}\n          <div>\n            <table>\n              <thead>\n                <tr>\n                  <th>Velocity</th>\n                  <th>Ind. Vert Break</th>\n                  <th>Horz Break</th>\n                  <th>Spin Rate</th>\n                  <th>RelHeight</th>\n                  <th>Extension</th>\n                  <th>Vert App Angle</th>\n                  <th>Pitch Grade</th>\n                </tr>\n              </thead>\n              <tbody>\n                {groupedData[key].map((row, index) => (\n                  <tr key={index}>\n                    {row.slice(3).map((cell, cellIndex) => (\n                      <td key={cellIndex}>{cell}</td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      ))}\n    </div>\n\n  );\n};\n\nexport default GraphsPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}