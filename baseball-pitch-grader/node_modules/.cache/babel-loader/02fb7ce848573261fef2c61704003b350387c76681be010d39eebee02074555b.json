{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1luke\\\\Desktop\\\\baseball-pitch-grader\\\\src\\\\components\\\\PitchingDataLineGraph.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PitchingDataLineGraph = ({\n  data\n}) => {\n  // Assuming the 2D array `data` has the following format for each row:\n  // ['Velocity', 'Ind. Vert Break', 'Horz Break', 'Spin Rate', 'RelHeight', 'Extension', 'Vert App Angle']\n\n  const datasetLabels = ['Velocity', 'Ind. Vert Break', 'Horz Break', 'Spin Rate', 'RelHeight', 'Extension', 'Vert App Angle'];\n  const colors = ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)', 'rgba(199, 199, 199, 0.6)'];\n  const datasets = data.map((row, index) => ({\n    label: `Pitch ${index + 1}`,\n    data: row,\n    fill: false,\n    backgroundColor: colors[index % colors.length],\n    borderColor: colors[index % colors.length]\n  }));\n  const chartData = {\n    labels: datasetLabels,\n    datasets\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      title: {\n        display: true,\n        text: 'Pitching Data Comparison'\n      },\n      legend: {\n        display: true,\n        position: 'top'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: chartData,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n};\n_c = PitchingDataLineGraph;\nexport default PitchingDataLineGraph;\nvar _c;\n$RefreshReg$(_c, \"PitchingDataLineGraph\");","map":{"version":3,"names":["React","Line","jsxDEV","_jsxDEV","PitchingDataLineGraph","data","datasetLabels","colors","datasets","map","row","index","label","fill","backgroundColor","length","borderColor","chartData","labels","options","responsive","plugins","title","display","text","legend","position","scales","y","beginAtZero","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/1luke/Desktop/baseball-pitch-grader/src/components/PitchingDataLineGraph.js"],"sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\n\nconst PitchingDataLineGraph = ({ data }) => {\n  // Assuming the 2D array `data` has the following format for each row:\n  // ['Velocity', 'Ind. Vert Break', 'Horz Break', 'Spin Rate', 'RelHeight', 'Extension', 'Vert App Angle']\n\n  const datasetLabels = ['Velocity', 'Ind. Vert Break', 'Horz Break', 'Spin Rate', 'RelHeight', 'Extension', 'Vert App Angle'];\n\n  const colors = [\n    'rgba(255, 99, 132, 0.6)',\n    'rgba(54, 162, 235, 0.6)',\n    'rgba(255, 206, 86, 0.6)',\n    'rgba(75, 192, 192, 0.6)',\n    'rgba(153, 102, 255, 0.6)',\n    'rgba(255, 159, 64, 0.6)',\n    'rgba(199, 199, 199, 0.6)',\n  ];\n\n  const datasets = data.map((row, index) => ({\n    label: `Pitch ${index + 1}`,\n    data: row,\n    fill: false,\n    backgroundColor: colors[index % colors.length],\n    borderColor: colors[index % colors.length],\n  }));\n\n  const chartData = {\n    labels: datasetLabels,\n    datasets\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      title: {\n        display: true,\n        text: 'Pitching Data Comparison'\n      },\n      legend: {\n        display: true,\n        position: 'top'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n\n  return <Line data={chartData} options={options} />;\n};\n\nexport default PitchingDataLineGraph;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,qBAAqB,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC1C;EACA;;EAEA,MAAMC,aAAa,GAAG,CAAC,UAAU,EAAE,iBAAiB,EAAE,YAAY,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,gBAAgB,CAAC;EAE5H,MAAMC,MAAM,GAAG,CACb,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,0BAA0B,EAC1B,yBAAyB,EACzB,0BAA0B,CAC3B;EAED,MAAMC,QAAQ,GAAGH,IAAI,CAACI,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,MAAM;IACzCC,KAAK,EAAG,SAAQD,KAAK,GAAG,CAAE,EAAC;IAC3BN,IAAI,EAAEK,GAAG;IACTG,IAAI,EAAE,KAAK;IACXC,eAAe,EAAEP,MAAM,CAACI,KAAK,GAAGJ,MAAM,CAACQ,MAAM,CAAC;IAC9CC,WAAW,EAAET,MAAM,CAACI,KAAK,GAAGJ,MAAM,CAACQ,MAAM;EAC3C,CAAC,CAAC,CAAC;EAEH,MAAME,SAAS,GAAG;IAChBC,MAAM,EAAEZ,aAAa;IACrBE;EACF,CAAC;EAED,MAAMW,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACR,CAAC;MACDC,MAAM,EAAE;QACNF,OAAO,EAAE,IAAI;QACbG,QAAQ,EAAE;MACZ;IACF,CAAC;IACDC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,WAAW,EAAE;MACf;IACF;EACF,CAAC;EAED,oBAAO1B,OAAA,CAACF,IAAI;IAACI,IAAI,EAAEY,SAAU;IAACE,OAAO,EAAEA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpD,CAAC;AAACC,EAAA,GAjDI9B,qBAAqB;AAmD3B,eAAeA,qBAAqB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}