{"ast":null,"code":"import Papa from 'papaparse';\nconst columnNames = ['Pitcher', 'TaggedPitchType', 'PitcherThrows', 'EffectiveVelo', 'InducedVertBreak', 'HorzBreak', 'SpinRate', 'RelHeight', 'Extension', 'VertApprAngle'];\nfunction extractDataFromCSV(file) {\n  return new Promise((resolve, reject) => {\n    Papa.parse(file, {\n      header: true,\n      complete: results => {\n        if (!Array.isArray(results.data)) {\n          reject(new Error(\"Parsed data is not an array\"));\n          return;\n        }\n        const extractedData = results.data.map(row => {\n          return columnNames.map(col => row[col]);\n        });\n        resolve(extractedData);\n      },\n      error: error => {\n        reject(error);\n      }\n    });\n  });\n}\nexport default extractDataFromCSV;","map":{"version":3,"names":["Papa","columnNames","extractDataFromCSV","file","Promise","resolve","reject","parse","header","complete","results","Array","isArray","data","Error","extractedData","map","row","col","error"],"sources":["C:/Users/PuertoFreakO/Desktop/CS495/CS495-AlabamaBaseball-GroupD/baseball-pitch-grader/src/components/extractDataFromCSV.js"],"sourcesContent":["import Papa from 'papaparse';\r\n\r\nconst columnNames = [\r\n    'Pitcher',\r\n    'TaggedPitchType',\r\n    'PitcherThrows',\r\n    'EffectiveVelo',\r\n    'InducedVertBreak',\r\n    'HorzBreak',\r\n    'SpinRate',\r\n    'RelHeight',\r\n    'Extension',\r\n    'VertApprAngle',\r\n];\r\n\r\nfunction extractDataFromCSV(file) {\r\n  return new Promise((resolve, reject) => {\r\n      Papa.parse(file, {\r\n          header: true,\r\n          complete: (results) => {\r\n              if (!Array.isArray(results.data)) {\r\n                  reject(new Error(\"Parsed data is not an array\"));\r\n                  return;\r\n              }\r\n\r\n              const extractedData = results.data.map(row => {\r\n                  return columnNames.map(col => row[col]);\r\n              });\r\n\r\n              resolve(extractedData);\r\n          },\r\n          error: (error) => {\r\n              reject(error);\r\n          }\r\n      });\r\n  });\r\n}\r\n\r\nexport default extractDataFromCSV;\r\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,WAAW;AAE5B,MAAMC,WAAW,GAAG,CAChB,SAAS,EACT,iBAAiB,EACjB,eAAe,EACf,eAAe,EACf,kBAAkB,EAClB,WAAW,EACX,UAAU,EACV,WAAW,EACX,WAAW,EACX,eAAe,CAClB;AAED,SAASC,kBAAkBA,CAACC,IAAI,EAAE;EAChC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpCN,IAAI,CAACO,KAAK,CAACJ,IAAI,EAAE;MACbK,MAAM,EAAE,IAAI;MACZC,QAAQ,EAAGC,OAAO,IAAK;QACnB,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,OAAO,CAACG,IAAI,CAAC,EAAE;UAC9BP,MAAM,CAAC,IAAIQ,KAAK,CAAC,6BAA6B,CAAC,CAAC;UAChD;QACJ;QAEA,MAAMC,aAAa,GAAGL,OAAO,CAACG,IAAI,CAACG,GAAG,CAACC,GAAG,IAAI;UAC1C,OAAOhB,WAAW,CAACe,GAAG,CAACE,GAAG,IAAID,GAAG,CAACC,GAAG,CAAC,CAAC;QAC3C,CAAC,CAAC;QAEFb,OAAO,CAACU,aAAa,CAAC;MAC1B,CAAC;MACDI,KAAK,EAAGA,KAAK,IAAK;QACdb,MAAM,CAACa,KAAK,CAAC;MACjB;IACJ,CAAC,CAAC;EACN,CAAC,CAAC;AACJ;AAEA,eAAejB,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}