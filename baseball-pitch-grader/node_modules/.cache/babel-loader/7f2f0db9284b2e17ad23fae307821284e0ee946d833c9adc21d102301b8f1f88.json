{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PuertoFreakO\\\\Desktop\\\\CS495\\\\CS495-AlabamaBaseball-GroupD\\\\baseball-pitch-grader\\\\src\\\\components\\\\PDFGraphsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport PitchingDataLineGraph from './PitchingDataLineGraph';\n//import './GraphsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PDFGraphsPage = gData => {\n  _s();\n  const [groupedData, setGroupedData] = React.useState({});\n  const test = () => {};\n\n  // Group data by the first two columns\n  const grouped = groupByColumns(gdata);\n  setGroupedData(grouped);\n\n  // Function to group the table data by the first two columns\n  const groupByColumns = data => {\n    const groups = {};\n    data.forEach(row => {\n      // Create a unique key for the group from the first two columns\n      const groupKey = `${row[0]}_${row[1]}`;\n      if (!groups[groupKey]) {\n        groups[groupKey] = [];\n      }\n      // Push the entire row (or the part you want to include) to the corresponding group\n      groups[groupKey].push(row);\n    });\n    return groups;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: test,\n      children: \"testing PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), Object.keys(groupedData).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Graph for \", key.replace('_', ' & ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PitchingDataLineGraph, {\n        data: groupedData[key].map(row => row.slice(3))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Velocity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Ind. Vert Break\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Horz Break\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Spin Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"RelHeight\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Extension\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Vert App Angle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Pitch Grade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: groupedData[key].map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: row.slice(3).map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: cell\n              }, cellIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 23\n              }, this))\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(PDFGraphsPage, \"oAQtAymBcXYdGMqW7BF658NpV8U=\");\n_c = PDFGraphsPage;\nexport default PDFGraphsPage;\nvar _c;\n$RefreshReg$(_c, \"PDFGraphsPage\");","map":{"version":3,"names":["React","useEffect","PitchingDataLineGraph","jsxDEV","_jsxDEV","PDFGraphsPage","gData","_s","groupedData","setGroupedData","useState","test","grouped","groupByColumns","gdata","data","groups","forEach","row","groupKey","push","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","key","replace","slice","index","cell","cellIndex","_c","$RefreshReg$"],"sources":["C:/Users/PuertoFreakO/Desktop/CS495/CS495-AlabamaBaseball-GroupD/baseball-pitch-grader/src/components/PDFGraphsPage.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport PitchingDataLineGraph from './PitchingDataLineGraph';\r\n//import './GraphsPage.css';\r\n\r\nconst PDFGraphsPage = (gData) => {\r\n  const [groupedData, setGroupedData] = React.useState({});\r\n\r\n  const test = () => {\r\n\r\n  }\r\n\r\n  // Group data by the first two columns\r\n  const grouped = groupByColumns(gdata);\r\n  setGroupedData(grouped);\r\n\r\n  // Function to group the table data by the first two columns\r\n  const groupByColumns = (data) => {\r\n    const groups = {};\r\n    data.forEach((row) => {\r\n      // Create a unique key for the group from the first two columns\r\n      const groupKey = `${row[0]}_${row[1]}`;\r\n      if (!groups[groupKey]) {\r\n        groups[groupKey] = [];\r\n      }\r\n      // Push the entire row (or the part you want to include) to the corresponding group\r\n      groups[groupKey].push(row);\r\n    });\r\n    return groups;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={test}>testing PDF</button>\r\n      {Object.keys(groupedData).map((key) => (\r\n        <div key={key}>\r\n          <h2>Graph for {key.replace('_', ' & ')}</h2>\r\n          <PitchingDataLineGraph data={groupedData[key].map(row => row.slice(3))} />\r\n\r\n          {/* Displaying data below each graph */}\r\n          <div>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Velocity</th>\r\n                  <th>Ind. Vert Break</th>\r\n                  <th>Horz Break</th>\r\n                  <th>Spin Rate</th>\r\n                  <th>RelHeight</th>\r\n                  <th>Extension</th>\r\n                  <th>Vert App Angle</th>\r\n                  <th>Pitch Grade</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {groupedData[key].map((row, index) => (\r\n                  <tr key={index}>\r\n                    {row.slice(3).map((cell, cellIndex) => (\r\n                      <td key={cellIndex}>{cell}</td>\r\n                    ))}\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default PDFGraphsPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}