{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PuertoFreakO\\\\Desktop\\\\CS495\\\\CS495-AlabamaBaseball-GroupD\\\\baseball-pitch-grader\\\\src\\\\components\\\\EditableTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditableTable = ({\n  data,\n  columns\n}) => {\n  _s();\n  const [tableData, setTableData] = useState(data);\n  const handleCellEdit = (rowIndex, columnIndex, value) => {\n    const updatedData = [...tableData];\n    updatedData[rowIndex][columnIndex] = value;\n    setTableData(updatedData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: columns.map((column, columnIndex) => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: column\n        }, columnIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: tableData.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: row.map((cell, columnIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: cell,\n            onChange: e => handleCellEdit(rowIndex, columnIndex, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this)\n        }, columnIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(EditableTable, \"VHFCurlu5akjVayIHpmJSmyLSMA=\");\n_c = EditableTable;\nexport default EditableTable;\nvar _c;\n$RefreshReg$(_c, \"EditableTable\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EditableTable","data","columns","_s","tableData","setTableData","handleCellEdit","rowIndex","columnIndex","value","updatedData","children","map","column","fileName","_jsxFileName","lineNumber","columnNumber","row","cell","type","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/PuertoFreakO/Desktop/CS495/CS495-AlabamaBaseball-GroupD/baseball-pitch-grader/src/components/EditableTable.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst EditableTable = ({ data, columns }) => {\n  const [tableData, setTableData] = useState(data);\n\n  const handleCellEdit = (rowIndex, columnIndex, value) => {\n    const updatedData = [...tableData];\n    updatedData[rowIndex][columnIndex] = value;\n    setTableData(updatedData);\n  };\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          {columns.map((column, columnIndex) => (\n            <th key={columnIndex}>{column}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {tableData.map((row, rowIndex) => (\n          <tr key={rowIndex}>\n            {row.map((cell, columnIndex) => (\n              <td key={columnIndex}>\n                <input\n                  type=\"text\"\n                  value={cell}\n                  onChange={(e) => handleCellEdit(rowIndex, columnIndex, e.target.value)}\n                />\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default EditableTable;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAACI,IAAI,CAAC;EAEhD,MAAMK,cAAc,GAAGA,CAACC,QAAQ,EAAEC,WAAW,EAAEC,KAAK,KAAK;IACvD,MAAMC,WAAW,GAAG,CAAC,GAAGN,SAAS,CAAC;IAClCM,WAAW,CAACH,QAAQ,CAAC,CAACC,WAAW,CAAC,GAAGC,KAAK;IAC1CJ,YAAY,CAACK,WAAW,CAAC;EAC3B,CAAC;EAED,oBACEX,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,eACEZ,OAAA;QAAAY,QAAA,EACGT,OAAO,CAACU,GAAG,CAAC,CAACC,MAAM,EAAEL,WAAW,kBAC/BT,OAAA;UAAAY,QAAA,EAAuBE;QAAM,GAApBL,WAAW;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CACnC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACRlB,OAAA;MAAAY,QAAA,EACGP,SAAS,CAACQ,GAAG,CAAC,CAACM,GAAG,EAAEX,QAAQ,kBAC3BR,OAAA;QAAAY,QAAA,EACGO,GAAG,CAACN,GAAG,CAAC,CAACO,IAAI,EAAEX,WAAW,kBACzBT,OAAA;UAAAY,QAAA,eACEZ,OAAA;YACEqB,IAAI,EAAC,MAAM;YACXX,KAAK,EAAEU,IAAK;YACZE,QAAQ,EAAGC,CAAC,IAAKhB,cAAc,CAACC,QAAQ,EAAEC,WAAW,EAAEc,CAAC,CAACC,MAAM,CAACd,KAAK;UAAE;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxE;QAAC,GALKT,WAAW;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMhB,CACL;MAAC,GATKV,QAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAACd,EAAA,CAnCIH,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AAqCnB,eAAeA,aAAa;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}