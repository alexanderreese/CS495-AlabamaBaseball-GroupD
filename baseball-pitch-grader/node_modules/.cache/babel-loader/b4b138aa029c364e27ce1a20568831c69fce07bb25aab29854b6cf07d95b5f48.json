{"ast":null,"code":"import Papa from 'papaparse';\nconst columnNames = ['Pitcher', 'PitcherThrows', 'TaggedPitchType', 'EffectiveVelo', 'InducedVertBreak', 'HorzBreak', 'SpinRate', 'RelHeight', 'Extension', 'VertApprAngle'];\nfunction extractDataFromCSV(file) {\n  return new Promise((resolve, reject) => {\n    Papa.parse(file, {\n      header: true,\n      complete: results => {\n        const extractedData = results.data.map(row => {\n          const filteredRow = {};\n          columnNames.forEach(col => {\n            filteredRow[col] = row[col];\n          });\n          return filteredRow;\n        });\n        resolve(extractedData);\n      },\n      error: error => {\n        reject(error);\n      }\n    });\n  });\n}\nexport default extractDataFromCSV;","map":{"version":3,"names":["Papa","columnNames","extractDataFromCSV","file","Promise","resolve","reject","parse","header","complete","results","extractedData","data","map","row","filteredRow","forEach","col","error"],"sources":["C:/Users/PuertoFreakO/Desktop/CS495/CS495-AlabamaBaseball-GroupD/baseball-pitch-grader/src/components/extractDataFromCSV.js"],"sourcesContent":["import Papa from 'papaparse';\r\n\r\nconst columnNames = [\r\n    'Pitcher',\r\n    'PitcherThrows',\r\n    'TaggedPitchType',\r\n    'EffectiveVelo',\r\n    'InducedVertBreak',\r\n    'HorzBreak',\r\n    'SpinRate',\r\n    'RelHeight',\r\n    'Extension',\r\n    'VertApprAngle',\r\n];\r\n\r\nfunction extractDataFromCSV(file) {\r\n    return new Promise((resolve, reject) => {\r\n        Papa.parse(file, {\r\n            header: true,\r\n            complete: (results) => {\r\n                const extractedData = results.data.map(row => {\r\n                    const filteredRow = {};\r\n                    columnNames.forEach(col => {\r\n                        filteredRow[col] = row[col];\r\n                    });\r\n                    return filteredRow;\r\n                });\r\n                resolve(extractedData);\r\n            },\r\n            error: (error) => {\r\n                reject(error);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nexport default extractDataFromCSV;\r\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,WAAW;AAE5B,MAAMC,WAAW,GAAG,CAChB,SAAS,EACT,eAAe,EACf,iBAAiB,EACjB,eAAe,EACf,kBAAkB,EAClB,WAAW,EACX,UAAU,EACV,WAAW,EACX,WAAW,EACX,eAAe,CAClB;AAED,SAASC,kBAAkBA,CAACC,IAAI,EAAE;EAC9B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpCN,IAAI,CAACO,KAAK,CAACJ,IAAI,EAAE;MACbK,MAAM,EAAE,IAAI;MACZC,QAAQ,EAAGC,OAAO,IAAK;QACnB,MAAMC,aAAa,GAAGD,OAAO,CAACE,IAAI,CAACC,GAAG,CAACC,GAAG,IAAI;UAC1C,MAAMC,WAAW,GAAG,CAAC,CAAC;UACtBd,WAAW,CAACe,OAAO,CAACC,GAAG,IAAI;YACvBF,WAAW,CAACE,GAAG,CAAC,GAAGH,GAAG,CAACG,GAAG,CAAC;UAC/B,CAAC,CAAC;UACF,OAAOF,WAAW;QACtB,CAAC,CAAC;QACFV,OAAO,CAACM,aAAa,CAAC;MAC1B,CAAC;MACDO,KAAK,EAAGA,KAAK,IAAK;QACdZ,MAAM,CAACY,KAAK,CAAC;MACjB;IACJ,CAAC,CAAC;EACN,CAAC,CAAC;AACN;AAEA,eAAehB,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}