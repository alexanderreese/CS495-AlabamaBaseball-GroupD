{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PuertoFreakO\\\\Desktop\\\\CS495\\\\CS495-AlabamaBaseball-GroupD\\\\baseball-pitch-grader\\\\src\\\\components\\\\ExportPDF.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport PDFGraphsPage from './PDFGraphsPage';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExportPDF = () => {\n  _s();\n  var _location$state2;\n  const location = useLocation();\n  const [groupedData, setGroupedData] = React.useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      var _location$state;\n      if (!((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.tableData)) return;\n\n      // Creating a new copy of tableData\n      const tableDataCopy = location.state.tableData.map(row => [...row]);\n\n      // Group data by the first two columns\n      const grouped = await groupByColumns(tableDataCopy);\n      setGroupedData(grouped);\n    };\n    fetchData();\n  }, [(_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.tableData]); // Dependency array includes tableData from location.state\n\n  // Function to group the table data by the first two columns\n  const groupByColumns = data => {\n    const groups = {};\n    data.forEach(async row => {\n      // Create a unique key for the group from the first two columns\n      const groupKey = `${row[0]}_${row[1]}`;\n      if (!groups[groupKey]) {\n        groups[groupKey] = [];\n        const newRow = await axios.get('http://wmill33.pythonanywhere.com/api/get_avgs/RH_4S_Fastball');\n      }\n      // Push the entire row (or the part you want to include) to the corresponding group\n      groups[groupKey].push(row);\n    });\n    return groups;\n  };\n  const printDocument = async () => {\n    const doc = new jsPDF();\n    const graphContainers = document.querySelectorAll('[id^=\"graph-container-\"]');\n    for (let i = 0; i < graphContainers.length; i++) {\n      const canvas = await html2canvas(graphContainers[i]);\n      const imgData = canvas.toDataURL('image/png');\n      if (i > 0) {\n        doc.addPage();\n      }\n      doc.addImage(imgData, 'PNG', 10, 10, 190, 280); // Adjust dimensions as needed\n    }\n\n    doc.save('graphs.pdf');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: printDocument,\n      children: \"Download PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"divToPrint\",\n      style: {\n        width: '210mm',\n        height: '297mm'\n      },\n      children: /*#__PURE__*/_jsxDEV(PDFGraphsPage, {\n        gData: groupedData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(ExportPDF, \"kCsa1Nm0g3VIlyZYA/29zNnceDY=\", false, function () {\n  return [useLocation];\n});\n_c = ExportPDF;\nexport default ExportPDF;\nvar _c;\n$RefreshReg$(_c, \"ExportPDF\");","map":{"version":3,"names":["React","useEffect","useLocation","html2canvas","jsPDF","PDFGraphsPage","axios","jsxDEV","_jsxDEV","ExportPDF","_s","_location$state2","location","groupedData","setGroupedData","useState","fetchData","_location$state","state","tableData","tableDataCopy","map","row","grouped","groupByColumns","data","groups","forEach","groupKey","newRow","get","push","printDocument","doc","graphContainers","document","querySelectorAll","i","length","canvas","imgData","toDataURL","addPage","addImage","save","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","style","width","height","gData","_c","$RefreshReg$"],"sources":["C:/Users/PuertoFreakO/Desktop/CS495/CS495-AlabamaBaseball-GroupD/baseball-pitch-grader/src/components/ExportPDF.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport html2canvas from 'html2canvas';\r\nimport jsPDF from 'jspdf';\r\nimport PDFGraphsPage from './PDFGraphsPage';\r\nimport axios from 'axios';\r\n\r\n\r\nconst ExportPDF = () => {\r\n  const location = useLocation();\r\n  const [groupedData, setGroupedData] = React.useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (!location.state?.tableData) return;\r\n    \r\n      // Creating a new copy of tableData\r\n      const tableDataCopy = location.state.tableData.map(row => [...row]);\r\n    \r\n      // Group data by the first two columns\r\n      const grouped = await groupByColumns(tableDataCopy);\r\n      setGroupedData(grouped);\r\n    };\r\n\r\n    fetchData();\r\n  }, [location.state?.tableData]); // Dependency array includes tableData from location.state\r\n  \r\n\r\n  // Function to group the table data by the first two columns\r\n  const groupByColumns = (data) => {\r\n    const groups = {};\r\n    data.forEach(async (row) => {\r\n      // Create a unique key for the group from the first two columns\r\n      const groupKey = `${row[0]}_${row[1]}`;\r\n      if (!groups[groupKey]) {\r\n        groups[groupKey] = [];\r\n        const newRow = await axios.get('http://wmill33.pythonanywhere.com/api/get_avgs/RH_4S_Fastball');\r\n      }\r\n      // Push the entire row (or the part you want to include) to the corresponding group\r\n      groups[groupKey].push(row);\r\n    });\r\n    return groups;\r\n  };\r\n\r\n  const printDocument = async () => {\r\n    const doc = new jsPDF();\r\n    const graphContainers = document.querySelectorAll('[id^=\"graph-container-\"]');\r\n\r\n    for (let i = 0; i < graphContainers.length; i++) {\r\n      const canvas = await html2canvas(graphContainers[i]);\r\n      const imgData = canvas.toDataURL('image/png');\r\n\r\n      if (i > 0) {\r\n        doc.addPage();\r\n      }\r\n      doc.addImage(imgData, 'PNG', 10, 10, 190, 280); // Adjust dimensions as needed\r\n    }\r\n\r\n    doc.save('graphs.pdf');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={printDocument}>Download PDF</button>\r\n      <div id=\"divToPrint\" style={{ width: '210mm', height: '297mm' }}>\r\n        <PDFGraphsPage gData={groupedData}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExportPDF;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}