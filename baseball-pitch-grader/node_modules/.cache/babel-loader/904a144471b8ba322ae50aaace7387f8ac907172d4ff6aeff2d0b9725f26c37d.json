{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PuertoFreakO\\\\Desktop\\\\CS495\\\\CS495-AlabamaBaseball-GroupD\\\\baseball-pitch-grader\\\\src\\\\components\\\\GraphsPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphsPage = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const tableData = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.tableData;\n  const columns = ['Pitcher Name', 'Pitch Type', 'Hand', 'Velocity', 'Ind. Vert Break', 'Horz Break', 'Spin Rate', 'RelHeight', 'Extension', 'Vert App Angle'];\n\n  // Extract data for graphs\n  const getGraphData = () => {\n    const graphData = {};\n    tableData.forEach(row => {\n      const pitchType = row[1];\n      if (pitchType && !graphData[pitchType]) {\n        graphData[pitchType] = row.slice(3); // Get metrics starting from 'Velocity'\n      }\n    });\n\n    return graphData;\n  };\n  const graphData = getGraphData();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Object.keys(graphData).map(pitchType => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: pitchType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: columns.slice(3),\n          datasets: [{\n            label: pitchType,\n            data: graphData[pitchType],\n            fill: false,\n            borderColor: 'rgb(75, 192, 192)',\n            tension: 0.1\n          }]\n        },\n        options: {\n          scales: {\n            x: {\n              type: 'category'\n            },\n            y: {\n              type: 'linear'\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)]\n    }, pitchType, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(GraphsPage, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = GraphsPage;\nexport default GraphsPage;\nvar _c;\n$RefreshReg$(_c, \"GraphsPage\");","map":{"version":3,"names":["React","Line","useLocation","jsxDEV","_jsxDEV","GraphsPage","_s","_location$state","location","tableData","state","columns","getGraphData","graphData","forEach","row","pitchType","slice","children","Object","keys","map","fileName","_jsxFileName","lineNumber","columnNumber","data","labels","datasets","label","fill","borderColor","tension","options","scales","x","type","y","_c","$RefreshReg$"],"sources":["C:/Users/PuertoFreakO/Desktop/CS495/CS495-AlabamaBaseball-GroupD/baseball-pitch-grader/src/components/GraphsPage.js"],"sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useLocation } from 'react-router-dom';\n\nconst GraphsPage = () => {\n  const location = useLocation();\n  const tableData = location.state?.tableData;\n    const columns = [\n        'Pitcher Name', 'Pitch Type', 'Hand', 'Velocity', \n        'Ind. Vert Break', 'Horz Break', 'Spin Rate', \n        'RelHeight', 'Extension', 'Vert App Angle'\n    ];\n\n    // Extract data for graphs\n    const getGraphData = () => {\n        const graphData = {};\n        tableData.forEach(row => {\n            const pitchType = row[1];\n            if (pitchType && !graphData[pitchType]) {\n                graphData[pitchType] = row.slice(3); // Get metrics starting from 'Velocity'\n            }\n        });\n        return graphData;\n    };\n\n    const graphData = getGraphData();\n\n    return (\n        <div>\n            {Object.keys(graphData).map(pitchType => (\n                <div key={pitchType}>\n                    <h2>{pitchType}</h2>\n                    <Line \n                      data={{\n                          labels: columns.slice(3),\n                          datasets: [{\n                              label: pitchType,\n                              data: graphData[pitchType],\n                              fill: false,\n                              borderColor: 'rgb(75, 192, 192)',\n                              tension: 0.1\n                          }]\n                      }}\n                      options={{\n                          scales: {\n                              x: {\n                                  type: 'category',\n                              },\n                              y: {\n                                  type: 'linear',\n                              },\n                          },\n                      }}\n                    />\n\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default GraphsPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,eAAA;EACvB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,SAAS,IAAAF,eAAA,GAAGC,QAAQ,CAACE,KAAK,cAAAH,eAAA,uBAAdA,eAAA,CAAgBE,SAAS;EACzC,MAAME,OAAO,GAAG,CACZ,cAAc,EAAE,YAAY,EAAE,MAAM,EAAE,UAAU,EAChD,iBAAiB,EAAE,YAAY,EAAE,WAAW,EAC5C,WAAW,EAAE,WAAW,EAAE,gBAAgB,CAC7C;;EAED;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvB,MAAMC,SAAS,GAAG,CAAC,CAAC;IACpBJ,SAAS,CAACK,OAAO,CAACC,GAAG,IAAI;MACrB,MAAMC,SAAS,GAAGD,GAAG,CAAC,CAAC,CAAC;MACxB,IAAIC,SAAS,IAAI,CAACH,SAAS,CAACG,SAAS,CAAC,EAAE;QACpCH,SAAS,CAACG,SAAS,CAAC,GAAGD,GAAG,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;MACzC;IACJ,CAAC,CAAC;;IACF,OAAOJ,SAAS;EACpB,CAAC;EAED,MAAMA,SAAS,GAAGD,YAAY,CAAC,CAAC;EAEhC,oBACIR,OAAA;IAAAc,QAAA,EACKC,MAAM,CAACC,IAAI,CAACP,SAAS,CAAC,CAACQ,GAAG,CAACL,SAAS,iBACjCZ,OAAA;MAAAc,QAAA,gBACId,OAAA;QAAAc,QAAA,EAAKF;MAAS;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBrB,OAAA,CAACH,IAAI;QACHyB,IAAI,EAAE;UACFC,MAAM,EAAEhB,OAAO,CAACM,KAAK,CAAC,CAAC,CAAC;UACxBW,QAAQ,EAAE,CAAC;YACPC,KAAK,EAAEb,SAAS;YAChBU,IAAI,EAAEb,SAAS,CAACG,SAAS,CAAC;YAC1Bc,IAAI,EAAE,KAAK;YACXC,WAAW,EAAE,mBAAmB;YAChCC,OAAO,EAAE;UACb,CAAC;QACL,CAAE;QACFC,OAAO,EAAE;UACLC,MAAM,EAAE;YACJC,CAAC,EAAE;cACCC,IAAI,EAAE;YACV,CAAC;YACDC,CAAC,EAAE;cACCD,IAAI,EAAE;YACV;UACJ;QACJ;MAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA,GAvBIT,SAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAyBd,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACnB,EAAA,CAvDID,UAAU;EAAA,QACGH,WAAW;AAAA;AAAAoC,EAAA,GADxBjC,UAAU;AAyDhB,eAAeA,UAAU;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}