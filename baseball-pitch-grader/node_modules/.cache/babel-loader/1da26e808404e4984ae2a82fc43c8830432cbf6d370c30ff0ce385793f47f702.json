{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PuertoFreakO\\\\Desktop\\\\CS495\\\\CS495-AlabamaBaseball-GroupD\\\\baseball-pitch-grader\\\\src\\\\components\\\\PitchingDataLineGraph.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PitchingDataLineGraph = ({\n  data\n}) => {\n  // Assuming the 2D array `data` has the following format for each row:\n  // ['Velocity', 'Ind. Vert Break', 'Horz Break', 'Spin Rate', 'RelHeight', 'Extension', 'Vert App Angle']\n\n  const datasetLabels = ['Velocity', 'Ind. Vert Break', 'Horz Break', 'Spin Rate', 'RelHeight', 'Extension', 'Vert App Angle'];\n  const colors = ['rgba(0, 0, 0, 1)',\n  //Black for Averages\n  'rgba(255, 99, 132, 0.6)',\n  // Red\n  'rgba(54, 162, 235, 0.6)',\n  // Blue\n  'rgba(255, 206, 86, 0.6)',\n  // Yellow\n  'rgba(75, 192, 192, 0.6)',\n  // Greenish Cyan\n  'rgba(153, 102, 255, 0.6)',\n  // Purple\n  'rgba(255, 159, 64, 0.6)',\n  // Orange\n  'rgba(199, 199, 199, 0.6)',\n  // Gray\n  'rgba(163, 73, 164, 0.6)',\n  // Plum\n  'rgba(255, 0, 0, 0.6)',\n  // Bright Red\n  'rgba(0, 128, 0, 0.6)',\n  // Dark Green\n  'rgba(0, 0, 255, 0.6)',\n  // Bright Blue\n  'rgba(128, 0, 128, 0.6)',\n  // Magenta\n  'rgba(255, 165, 0, 0.6)',\n  // Orange (different shade)\n  'rgba(0, 255, 127, 0.6)',\n  // Spring Green\n  'rgba(60, 179, 113, 0.6)' // Medium Sea Green\n  ];\n\n  const datasets = data.map((row, index) => ({\n    label: index === 0 ? 'Average Scores' : `Pitch ${index}`,\n    data: row,\n    fill: false,\n    backgroundColor: colors[index % colors.length],\n    borderColor: colors[index % colors.length]\n  }));\n  const chartData = {\n    labels: datasetLabels,\n    datasets\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      title: {\n        display: true,\n        text: 'Pitching Data Comparison'\n      },\n      legend: {\n        display: true,\n        position: 'top'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: chartData,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 10\n  }, this);\n};\n_c = PitchingDataLineGraph;\nexport default PitchingDataLineGraph;\nvar _c;\n$RefreshReg$(_c, \"PitchingDataLineGraph\");","map":{"version":3,"names":["React","Line","jsxDEV","_jsxDEV","PitchingDataLineGraph","data","datasetLabels","colors","datasets","map","row","index","label","fill","backgroundColor","length","borderColor","chartData","labels","options","responsive","plugins","title","display","text","legend","position","scales","y","beginAtZero","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PuertoFreakO/Desktop/CS495/CS495-AlabamaBaseball-GroupD/baseball-pitch-grader/src/components/PitchingDataLineGraph.js"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport 'chart.js/auto';\r\n\r\nconst PitchingDataLineGraph = ({ data }) => {\r\n  // Assuming the 2D array `data` has the following format for each row:\r\n  // ['Velocity', 'Ind. Vert Break', 'Horz Break', 'Spin Rate', 'RelHeight', 'Extension', 'Vert App Angle']\r\n\r\n  const datasetLabels = ['Velocity', 'Ind. Vert Break', 'Horz Break', 'Spin Rate', 'RelHeight', 'Extension', 'Vert App Angle'];\r\n\r\n  const colors = [\r\n    'rgba(0, 0, 0, 1)', //Black for Averages\r\n    'rgba(255, 99, 132, 0.6)', // Red\r\n    'rgba(54, 162, 235, 0.6)', // Blue\r\n    'rgba(255, 206, 86, 0.6)', // Yellow\r\n    'rgba(75, 192, 192, 0.6)', // Greenish Cyan\r\n    'rgba(153, 102, 255, 0.6)', // Purple\r\n    'rgba(255, 159, 64, 0.6)', // Orange\r\n    'rgba(199, 199, 199, 0.6)', // Gray\r\n    'rgba(163, 73, 164, 0.6)', // Plum\r\n    'rgba(255, 0, 0, 0.6)', // Bright Red\r\n    'rgba(0, 128, 0, 0.6)', // Dark Green\r\n    'rgba(0, 0, 255, 0.6)', // Bright Blue\r\n    'rgba(128, 0, 128, 0.6)', // Magenta\r\n    'rgba(255, 165, 0, 0.6)', // Orange (different shade)\r\n    'rgba(0, 255, 127, 0.6)', // Spring Green\r\n    'rgba(60, 179, 113, 0.6)' // Medium Sea Green\r\n  ];\r\n\r\n\r\n  const datasets = data.map((row, index) => ({\r\n    label: index === 0 ? 'Average Scores' : `Pitch ${index}`,\r\n    data: row,\r\n    fill: false,\r\n    backgroundColor: colors[index % colors.length],\r\n    borderColor: colors[index % colors.length],\r\n  }));\r\n\r\n  const chartData = {\r\n    labels: datasetLabels,\r\n    datasets\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      title: {\r\n        display: true,\r\n        text: 'Pitching Data Comparison'\r\n      },\r\n      legend: {\r\n        display: true,\r\n        position: 'top'\r\n      }\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true\r\n      }\r\n    }\r\n  };\r\n\r\n  return <Line data={chartData} options={options} />;\r\n};\r\n\r\nexport default PitchingDataLineGraph;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,qBAAqB,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC1C;EACA;;EAEA,MAAMC,aAAa,GAAG,CAAC,UAAU,EAAE,iBAAiB,EAAE,YAAY,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,gBAAgB,CAAC;EAE5H,MAAMC,MAAM,GAAG,CACb,kBAAkB;EAAE;EACpB,yBAAyB;EAAE;EAC3B,yBAAyB;EAAE;EAC3B,yBAAyB;EAAE;EAC3B,yBAAyB;EAAE;EAC3B,0BAA0B;EAAE;EAC5B,yBAAyB;EAAE;EAC3B,0BAA0B;EAAE;EAC5B,yBAAyB;EAAE;EAC3B,sBAAsB;EAAE;EACxB,sBAAsB;EAAE;EACxB,sBAAsB;EAAE;EACxB,wBAAwB;EAAE;EAC1B,wBAAwB;EAAE;EAC1B,wBAAwB;EAAE;EAC1B,yBAAyB,CAAC;EAAA,CAC3B;;EAGD,MAAMC,QAAQ,GAAGH,IAAI,CAACI,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,MAAM;IACzCC,KAAK,EAAED,KAAK,KAAK,CAAC,GAAG,gBAAgB,GAAI,SAAQA,KAAM,EAAC;IACxDN,IAAI,EAAEK,GAAG;IACTG,IAAI,EAAE,KAAK;IACXC,eAAe,EAAEP,MAAM,CAACI,KAAK,GAAGJ,MAAM,CAACQ,MAAM,CAAC;IAC9CC,WAAW,EAAET,MAAM,CAACI,KAAK,GAAGJ,MAAM,CAACQ,MAAM;EAC3C,CAAC,CAAC,CAAC;EAEH,MAAME,SAAS,GAAG;IAChBC,MAAM,EAAEZ,aAAa;IACrBE;EACF,CAAC;EAED,MAAMW,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACR,CAAC;MACDC,MAAM,EAAE;QACNF,OAAO,EAAE,IAAI;QACbG,QAAQ,EAAE;MACZ;IACF,CAAC;IACDC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,WAAW,EAAE;MACf;IACF;EACF,CAAC;EAED,oBAAO1B,OAAA,CAACF,IAAI;IAACI,IAAI,EAAEY,SAAU;IAACE,OAAO,EAAEA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpD,CAAC;AAACC,EAAA,GA3DI9B,qBAAqB;AA6D3B,eAAeA,qBAAqB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}