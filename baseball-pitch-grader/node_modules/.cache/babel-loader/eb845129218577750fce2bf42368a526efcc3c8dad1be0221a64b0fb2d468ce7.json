{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PuertoFreakO\\\\Desktop\\\\CS495\\\\CS495-AlabamaBaseball-GroupD\\\\baseball-pitch-grader\\\\src\\\\components\\\\ExportPDF.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nimport PDFGraphsPage from './PDFGraphsPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExportPDF = () => {\n  _s();\n  var _location$state2;\n  const location = useLocation();\n  const [groupedData, setGroupedData] = React.useState({});\n  useEffect(() => {\n    var _location$state;\n    if (!((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.tableData)) return;\n\n    // Creating a new copy of tableData\n    const tableDataCopy = location.state.tableData.map(row => [...row, 100]);\n\n    // Group data by the first two columns\n    const grouped = groupByColumns(tableDataCopy);\n    setGroupedData(grouped);\n  }, [(_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.tableData]); // Dependency array includes tableData from location.state\n\n  // Function to group the table data by the first two columns\n  const groupByColumns = data => {\n    const groups = {};\n    data.forEach(row => {\n      // Create a unique key for the group from the first two columns\n      const groupKey = `${row[0]}_${row[1]}`;\n      if (!groups[groupKey]) {\n        groups[groupKey] = [];\n      }\n      // Push the entire row (or the part you want to include) to the corresponding group\n      groups[groupKey].push(row);\n    });\n    return groups;\n  };\n  const printDocument = () => {\n    const pdf = new jsPDF();\n    const graphSections = Object.keys(groupedData).length;\n    const captureAndAddPage = async index => {\n      if (index >= graphSections) {\n        pdf.save('download.pdf');\n        return;\n      }\n      const input = document.getElementById(`graphSection-${index}`);\n      const canvas = await html2canvas(input);\n      const imgData = canvas.toDataURL('image/png');\n      if (index > 0) {\n        pdf.addPage();\n      }\n      pdf.addImage(imgData, 'PNG', 0, 0);\n      captureAndAddPage(index + 1);\n    };\n    captureAndAddPage(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: printDocument,\n      children: \"Download PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"divToPrint\",\n      style: {\n        width: '210mm',\n        height: '297mm'\n      },\n      children: /*#__PURE__*/_jsxDEV(PDFGraphsPage, {\n        gData: groupedData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(ExportPDF, \"kCsa1Nm0g3VIlyZYA/29zNnceDY=\", false, function () {\n  return [useLocation];\n});\n_c = ExportPDF;\nexport default ExportPDF;\nvar _c;\n$RefreshReg$(_c, \"ExportPDF\");","map":{"version":3,"names":["React","useEffect","useLocation","html2canvas","jsPDF","PDFGraphsPage","jsxDEV","_jsxDEV","ExportPDF","_s","_location$state2","location","groupedData","setGroupedData","useState","_location$state","state","tableData","tableDataCopy","map","row","grouped","groupByColumns","data","groups","forEach","groupKey","push","printDocument","pdf","graphSections","Object","keys","length","captureAndAddPage","index","save","input","document","getElementById","canvas","imgData","toDataURL","addPage","addImage","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","style","width","height","gData","_c","$RefreshReg$"],"sources":["C:/Users/PuertoFreakO/Desktop/CS495/CS495-AlabamaBaseball-GroupD/baseball-pitch-grader/src/components/ExportPDF.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport html2canvas from 'html2canvas';\r\nimport jsPDF from 'jspdf';\r\nimport PDFGraphsPage from './PDFGraphsPage';\r\n\r\n\r\nconst ExportPDF = () => {\r\n  const location = useLocation();\r\n  const [groupedData, setGroupedData] = React.useState({});\r\n\r\n  useEffect(() => {\r\n    if (!location.state?.tableData) return;\r\n  \r\n    // Creating a new copy of tableData\r\n    const tableDataCopy = location.state.tableData.map(row => [...row, 100]);\r\n  \r\n    // Group data by the first two columns\r\n    const grouped = groupByColumns(tableDataCopy);\r\n    setGroupedData(grouped);\r\n  }, [location.state?.tableData]); // Dependency array includes tableData from location.state\r\n  \r\n\r\n  // Function to group the table data by the first two columns\r\n  const groupByColumns = (data) => {\r\n    const groups = {};\r\n    data.forEach((row) => {\r\n      // Create a unique key for the group from the first two columns\r\n      const groupKey = `${row[0]}_${row[1]}`;\r\n      if (!groups[groupKey]) {\r\n        groups[groupKey] = [];\r\n      }\r\n      // Push the entire row (or the part you want to include) to the corresponding group\r\n      groups[groupKey].push(row);\r\n    });\r\n    return groups;\r\n  };\r\n  \r\n\r\n  const printDocument = () => {\r\n    const pdf = new jsPDF();\r\n    const graphSections = Object.keys(groupedData).length;\r\n  \r\n    const captureAndAddPage = async (index) => {\r\n      if (index >= graphSections) {\r\n        pdf.save('download.pdf');\r\n        return;\r\n      }\r\n  \r\n      const input = document.getElementById(`graphSection-${index}`);\r\n      const canvas = await html2canvas(input);\r\n      const imgData = canvas.toDataURL('image/png');\r\n  \r\n      if (index > 0) {\r\n        pdf.addPage();\r\n      }\r\n  \r\n      pdf.addImage(imgData, 'PNG', 0, 0);\r\n      captureAndAddPage(index + 1);\r\n    };\r\n  \r\n    captureAndAddPage(0);\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <button onClick={printDocument}>Download PDF</button>\r\n      <div id=\"divToPrint\" style={{ width: '210mm', height: '297mm' }}>\r\n        <PDFGraphsPage gData={groupedData}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExportPDF;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,gBAAA;EACtB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGb,KAAK,CAACc,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExDb,SAAS,CAAC,MAAM;IAAA,IAAAc,eAAA;IACd,IAAI,GAAAA,eAAA,GAACJ,QAAQ,CAACK,KAAK,cAAAD,eAAA,eAAdA,eAAA,CAAgBE,SAAS,GAAE;;IAEhC;IACA,MAAMC,aAAa,GAAGP,QAAQ,CAACK,KAAK,CAACC,SAAS,CAACE,GAAG,CAACC,GAAG,IAAI,CAAC,GAAGA,GAAG,EAAE,GAAG,CAAC,CAAC;;IAExE;IACA,MAAMC,OAAO,GAAGC,cAAc,CAACJ,aAAa,CAAC;IAC7CL,cAAc,CAACQ,OAAO,CAAC;EACzB,CAAC,EAAE,EAAAX,gBAAA,GAACC,QAAQ,CAACK,KAAK,cAAAN,gBAAA,uBAAdA,gBAAA,CAAgBO,SAAS,CAAC,CAAC,CAAC,CAAC;;EAGjC;EACA,MAAMK,cAAc,GAAIC,IAAI,IAAK;IAC/B,MAAMC,MAAM,GAAG,CAAC,CAAC;IACjBD,IAAI,CAACE,OAAO,CAAEL,GAAG,IAAK;MACpB;MACA,MAAMM,QAAQ,GAAI,GAAEN,GAAG,CAAC,CAAC,CAAE,IAAGA,GAAG,CAAC,CAAC,CAAE,EAAC;MACtC,IAAI,CAACI,MAAM,CAACE,QAAQ,CAAC,EAAE;QACrBF,MAAM,CAACE,QAAQ,CAAC,GAAG,EAAE;MACvB;MACA;MACAF,MAAM,CAACE,QAAQ,CAAC,CAACC,IAAI,CAACP,GAAG,CAAC;IAC5B,CAAC,CAAC;IACF,OAAOI,MAAM;EACf,CAAC;EAGD,MAAMI,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,GAAG,GAAG,IAAIzB,KAAK,CAAC,CAAC;IACvB,MAAM0B,aAAa,GAAGC,MAAM,CAACC,IAAI,CAACpB,WAAW,CAAC,CAACqB,MAAM;IAErD,MAAMC,iBAAiB,GAAG,MAAOC,KAAK,IAAK;MACzC,IAAIA,KAAK,IAAIL,aAAa,EAAE;QAC1BD,GAAG,CAACO,IAAI,CAAC,cAAc,CAAC;QACxB;MACF;MAEA,MAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAE,gBAAeJ,KAAM,EAAC,CAAC;MAC9D,MAAMK,MAAM,GAAG,MAAMrC,WAAW,CAACkC,KAAK,CAAC;MACvC,MAAMI,OAAO,GAAGD,MAAM,CAACE,SAAS,CAAC,WAAW,CAAC;MAE7C,IAAIP,KAAK,GAAG,CAAC,EAAE;QACbN,GAAG,CAACc,OAAO,CAAC,CAAC;MACf;MAEAd,GAAG,CAACe,QAAQ,CAACH,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;MAClCP,iBAAiB,CAACC,KAAK,GAAG,CAAC,CAAC;IAC9B,CAAC;IAEDD,iBAAiB,CAAC,CAAC,CAAC;EACtB,CAAC;EAGD,oBACE3B,OAAA;IAAAsC,QAAA,gBACEtC,OAAA;MAAQuC,OAAO,EAAElB,aAAc;MAAAiB,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrD3C,OAAA;MAAK4C,EAAE,EAAC,YAAY;MAACC,KAAK,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAAAT,QAAA,eAC9DtC,OAAA,CAACF,aAAa;QAACkD,KAAK,EAAE3C;MAAY;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzC,EAAA,CAlEID,SAAS;EAAA,QACIN,WAAW;AAAA;AAAAsD,EAAA,GADxBhD,SAAS;AAoEf,eAAeA,SAAS;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}