{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PuertoFreakO\\\\Desktop\\\\CS495\\\\CS495-AlabamaBaseball-GroupD\\\\baseball-pitch-grader\\\\src\\\\components\\\\GraphsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PitchingDataLineGraph from './PitchingDataLineGraph';\n//import './GraphsPage.css';\nimport ExportPDF from './ExportPDF';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphsPage = () => {\n  _s();\n  var _location$state2;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [groupedData, setGroupedData] = React.useState({});\n  useEffect(() => {\n    var _location$state;\n    if (!((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.tableData)) return;\n\n    // Creating a new copy of tableData\n    const tableDataCopy = location.state.tableData.map(row => [...row, 100]);\n\n    // Group data by the first two columns\n    const grouped = groupByColumns(tableDataCopy);\n    setGroupedData(grouped);\n  }, [(_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.tableData]); // Dependency array includes tableData from location.state\n\n  // Function to group the table data by the first two columns\n  const groupByColumns = data => {\n    const groups = {};\n    data.forEach(row => {\n      // Create a unique key for the group from the first two columns\n      const groupKey = `${row[0]}_${row[1]}`;\n      if (!groups[groupKey]) {\n        groups[groupKey] = [];\n      }\n      // Push the entire row (or the part you want to include) to the corresponding group\n      groups[groupKey].push(row);\n    });\n    return groups;\n  };\n  const printDocument = () => {\n    navigate('/export-pdf', {\n      state: {\n        tableData: groupedData\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: printDocument,\n      children: \"testDownload PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), Object.keys(groupedData).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Graph for \", key.replace('_', ' & ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PitchingDataLineGraph, {\n        data: groupedData[key].map(row => row.slice(3))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Velocity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Ind. Vert Break\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Horz Break\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Spin Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"RelHeight\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Extension\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Vert App Angle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Pitch Grade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: groupedData[key].map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: row.slice(3).map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: cell\n              }, cellIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 23\n              }, this))\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphsPage, \"VLduIBlw0IZvx581gWdZFurlg30=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = GraphsPage;\nexport default GraphsPage;\nvar _c;\n$RefreshReg$(_c, \"GraphsPage\");","map":{"version":3,"names":["React","useEffect","useLocation","PitchingDataLineGraph","ExportPDF","useNavigate","jsxDEV","_jsxDEV","GraphsPage","_s","_location$state2","location","navigate","groupedData","setGroupedData","useState","_location$state","state","tableData","tableDataCopy","map","row","grouped","groupByColumns","data","groups","forEach","groupKey","push","printDocument","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","key","replace","slice","index","cell","cellIndex","_c","$RefreshReg$"],"sources":["C:/Users/PuertoFreakO/Desktop/CS495/CS495-AlabamaBaseball-GroupD/baseball-pitch-grader/src/components/GraphsPage.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport PitchingDataLineGraph from './PitchingDataLineGraph';\r\n//import './GraphsPage.css';\r\nimport ExportPDF from './ExportPDF';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst GraphsPage = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [groupedData, setGroupedData] = React.useState({});\r\n\r\n  useEffect(() => {\r\n    if (!location.state?.tableData) return;\r\n  \r\n    // Creating a new copy of tableData\r\n    const tableDataCopy = location.state.tableData.map(row => [...row, 100]);\r\n  \r\n    // Group data by the first two columns\r\n    const grouped = groupByColumns(tableDataCopy);\r\n    setGroupedData(grouped);\r\n  }, [location.state?.tableData]); // Dependency array includes tableData from location.state\r\n  \r\n\r\n  // Function to group the table data by the first two columns\r\n  const groupByColumns = (data) => {\r\n    const groups = {};\r\n    data.forEach((row) => {\r\n      // Create a unique key for the group from the first two columns\r\n      const groupKey = `${row[0]}_${row[1]}`;\r\n      if (!groups[groupKey]) {\r\n        groups[groupKey] = [];\r\n      }\r\n      // Push the entire row (or the part you want to include) to the corresponding group\r\n      groups[groupKey].push(row);\r\n    });\r\n    return groups;\r\n  };\r\n\r\n  const printDocument = () => {\r\n    navigate('/export-pdf', { state: { tableData: groupedData } });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={printDocument}>testDownload PDF</button>\r\n      {Object.keys(groupedData).map((key) => (\r\n        <div key={key}>\r\n          <h2>Graph for {key.replace('_', ' & ')}</h2>\r\n          <PitchingDataLineGraph data={groupedData[key].map(row => row.slice(3))} />\r\n\r\n          {/* Displaying data below each graph */}\r\n          <div>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Velocity</th>\r\n                  <th>Ind. Vert Break</th>\r\n                  <th>Horz Break</th>\r\n                  <th>Spin Rate</th>\r\n                  <th>RelHeight</th>\r\n                  <th>Extension</th>\r\n                  <th>Vert App Angle</th>\r\n                  <th>Pitch Grade</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {groupedData[key].map((row, index) => (\r\n                  <tr key={index}>\r\n                    {row.slice(3).map((cell, cellIndex) => (\r\n                      <td key={cellIndex}>{cell}</td>\r\n                    ))}\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default GraphsPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}